---
meta:
  productName: "deploy-sourcegraph-docker"
  owners:
    - "@sourcegraph/release"
  repository: "github.com/sourcegraph/deploy-sourcegraph-docker"
inputs:
  releaseId: server
requirements:
  - name: "go"
    cmd: "which go"
    fixInstructions: "install golang"
  - name: "GitHub cli exists"
    cmd: "which gh"
    fixInstructions: "install GitHub cli"
internal:
  create:
    steps:
      patch:
          - name: docker:tags
            cmd: |
              # TODO: use {{tag}}
              ./tools/update-docker-tags.sh {{tag}}
          - name: "git:branch"
            cmd: |
              branch="wip_{{version}}"
              git switch -c "${branch}"
              git commit -am 'release_patch: {{version}}' -m '{{config}}'
              git push origin ${branch}
          - name: "gh"
            cmd: |
              gh pr create -f -t "PRETEND RELEASE WIP: release_patch: build {{version}}"
      minor:
          - name: docker:tags
            cmd: |
              # TODO: use {{tag}}
              ./tools/update-docker-tags.sh {{tag}}
          - name: "git:branch"
            cmd: |
              branch="wip_{{version}}"
              git switch -c "${branch}"
              git commit -am 'release_minor: {{version}}' -m '{{config}}'
              git push origin ${branch}
          - name: "gh"
            cmd: |
              gh pr create -f -t "PRETEND RELEASE WIP: release_minor: build {{version}}"
      major:
          - name: docker:tags
            cmd: |
              ./tools/update-docker-tags.sh {{tag}}
          - name: "git:branch"
            cmd: |
              branch="wip_{{version}}"
              git switch -c "${branch}"
              git commit -am 'release_major: {{version}}' -m '{{config}}'
              git push origin ${branch}
          - name: "gh"
            cmd: |
              gh pr create -f -t "PRETEND RELEASE WIP: release_major: build {{version}}"
  finalize:
    steps:
      - name: "git:finalize"
        cmd: |
          set -e
          branch="wip-release-{{version}}"
          git switch -c "${branch}"
          echo "pushing branch ${branch}"
          git push origin "${branch}"
          git checkout -
test:
  steps:
    - name: "foo"
      cmd: |
        echo "Test"

promoteToPublic:
  create:
    steps:
      - name: docker:tags
        cmd: |
          ./tools/update-docker-tags.sh {{tag}}
      - name: "git:branch"
        cmd: |
          branch="promote-release_{{version}}"
          git switch -c "${branch}"
          git commit -am 'promote-release: {{version}}' -m '{{config}}'
          git push origin "${branch}"
      - name: "gh"
        cmd: |
          set -e
          branch="wip-release-{{version}}"
          # we need to fetch from origin just in case this branch doesn't exist locally, so that the PR can find the base
          git fetch origin "${branch}"
          gh pr create -f -t "PRETEND PROMOTE RELEASE - release: build {{version}}" --base "${branch}"
  finalize:
    steps:
      - name: git:tag
        cmd: |
          set -e
          branch="wip-release-{{version}}"
          git checkout "${branch}"
          git tag wip-{{version}}
          git push origin ${branch} --tags
